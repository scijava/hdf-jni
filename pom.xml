<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.scijava</groupId>
		<artifactId>pom-scijava</artifactId>
		<version>5.4.0</version>
		<relativePath />
	</parent>

	<groupId>ncsa.hdf</groupId>
	<artifactId>nar-hdf5</artifactId>
	<version>0.1.1-SNAPSHOT</version>

	<name>HDF JNI Distribution</name>
	<description>NAR (Native ARchive) distribution of HDF-related JNI code.</description>
	<packaging>nar</packaging>

	<properties>
		<architecture.option />
		<debug.option />
		<java.os.include />
		<libdl.name />
		<skipTests>true</skipTests>
		<stack.protector.option />
		<subsystem.option />
		<hdf5-detect.path>${project.basedir}/src/main/c/H5detect.c</hdf5-detect.path>
		<hdf5-libsettings.path>${project.basedir}/src/main/c/H5libsettings.c</hdf5-libsettings.path>
	</properties>

	<scm>
		<connection>scm:git:git://github.com/scifio/hdf5jni</connection>
		<developerConnection>scm:git:git@github.com:scifio/hdf5jni</developerConnection>
		<tag>HEAD</tag>
		<url>http://github.com/scifio/hdf5jni</url>
	</scm>

	<issueManagement>
		<system>GitHub Issues</system>
		<url>https://github.com/scifio/hdf5jni/issues</url>
	</issueManagement>

	<ciManagement>
		<system>Jenkins</system>
		<url>http://jenkins.imagej.net/view/HDF5JNI/</url>
	</ciManagement>

	<repositories>
		<repository>
			<id>imagej.public</id>
			<url>http://maven.imagej.net/content/groups/public</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>org.scijava</groupId>
			<artifactId>native-lib-loader</artifactId>
			<version>2.0.2</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>com.github.maven-nar</groupId>
				<artifactId>nar-maven-plugin</artifactId>
				<version>3.2.0</version>
				<extensions>true</extensions>
				<configuration>
					<cpp>
						<exceptions>false</exceptions>
					</cpp>
					<linker>
						<sysLibs>
							<sysLib>
								<name>${libdl.name}</name>
							</sysLib>
						</sysLibs>
					</linker>
					<libraries>
						<library>
							<type>jni</type>
<!--
	When generating the NarSystem class, the NAR plugin detects the presence of
	the native-lib-loader dependency and makes full use of it to unpack and load the
	native library.
-->
							<narSystemPackage>ncsa.hdf</narSystemPackage>
							<linkCPP>false</linkCPP>
						</library>
					</libraries>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>run-detect</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>${project.basedir}/bin/H5Detect.exe</executable>
							<workingDirectory>${project.basedir}/bin</workingDirectory>
							<outputFile>${hdf5-detect.path}</outputFile>
						</configuration>
					</execution>
					<execution>
						<id>run-libsettings</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>${project.basedir}/bin/H5make_libsettings.exe</executable>
							<workingDirectory>${project.basedir}/bin</workingDirectory>
							<outputFile>${hdf5-libsettings.path}</outputFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>i386-Windows</id>
			<activation>
				<os>
					<family>windows</family>
					<arch>x86</arch>
				</os>
			</activation>
			<properties>
				<java.os.include>-I${JAVA_HOME}/include/win32</java.os.include>
				<architecture.option>-m32</architecture.option>
				<subsystem.option>-mwindows</subsystem.option>
				<libdl.name>ws2_32</libdl.name>
			</properties>
		</profile>

		<profile>
			<id>amd64-Windows</id>
			<activation>
				<os>
					<family>windows</family>
					<arch>amd64</arch>
				</os>
			</activation>
			<properties>
				<java.os.include>-I${JAVA_HOME}/include/win32</java.os.include>
				<architecture.option>-m64</architecture.option>
				<subsystem.option>-mwindows</subsystem.option>
				<libdl.name>ws2_32</libdl.name>
			</properties>
		</profile>
	</profiles>
</project>
